--1. Obtener la fecha y total de la compra mas reciente de cada cliente
SELECT CUS.CUSTOMER_ID,
    MAX(ORD.ORDER_DATE) ULT_COMPRA,
    SUM(OP.QUANTITY * PROD.LIST_PRICE) TOTAL
FROM PDELAGARZA.ORDERS ORD
    INNER JOIN PDELAGARZA.ORDERS_PRODUCTS OP
        ON ORD.ORDER_ID = OP.ORDER_ID
    INNER JOIN PDELAGARZA.PRODUCTS PROD
        ON OP.PRODUCT_ID = PROD.PRODUCT_ID
    INNER JOIN PDELAGARZA.CUSTOMERS CUS
        ON ORD.CUSTOMER_ID = CUS.CUSTOMER_ID
GROUP BY CUS.CUSTOMER_ID
ORDER BY CUS.CUSTOMER_ID ASC;

--2 Obtener a los clientes cuyo nombre contenga la letra H o apellido inicie con Z
SELECT CUSTOMER_ID, FIRST_NAME, LAST_NAME
FROM PDELAGARZA.CUSTOMERS
WHERE FIRST_NAME LIKE '%H%' OR LAST_NAME LIKE 'Z%';

--3 Mostrar los detalles de las ordenes y calcular el costo de envio de cada orden tomando en cuenta: 
---10% del total cuando sea menor de 10000,
---8% del total cuando este entre 10000 y 30000
---5% del total cuando sea mayor a 30000
SELECT ORDER_ID, ORDER_DATE, CUSTOMER_ID, FIRST_NAME, PRODUCT_ID, TOTAL, (CASE WHEN TOTAL <= 10000 THEN TOTAL*0.1
    WHEN 10000 <TOTAL AND TOTAL <=30000 THEN TOTAL*0.08
    ELSE TOTAL*0.05 END) SHIPPING
    FROM(SELECT ORD.ORDER_ID,
            ORD.ORDER_DATE,
            CUS.CUSTOMER_ID,
            CUS.FIRST_NAME,
            PROD.PRODUCT_ID,
            SUM(OP.QUANTITY * PROD.LIST_PRICE) TOTAL
        FROM PDELAGARZA.ORDERS ORD
            INNER JOIN PDELAGARZA.ORDERS_PRODUCTS OP
                ON ORD.ORDER_ID = OP.ORDER_ID
            INNER JOIN PDELAGARZA.PRODUCTS PROD
                ON OP.PRODUCT_ID = PROD.PRODUCT_ID
            INNER JOIN PDELAGARZA.CUSTOMERS CUS
                ON ORD.CUSTOMER_ID = CUS.CUSTOMER_ID
            GROUP BY ORD.ORDER_ID, ORD.ORDER_DATE, CUS.CUSTOMER_ID, CUS.FIRST_NAME, PROD.PRODUCT_ID)
GROUP BY ORDER_ID, ORDER_DATE, CUSTOMER_ID, FIRST_NAME, PRODUCT_ID, TOTAL;

--4 Obtener los productos con un costo mayor a 100
SELECT PRODUCT_ID, LIST_PRICE FROM PDELAGARZA.PRODUCTS
WHERE LIST_PRICE >100
GROUP BY PRODUCT_ID, LIST_PRICE
ORDER BY LIST_PRICE ASC;

--5 Promediar el costo de todos los productos y obtener el mayor costo
SELECT * FROM (SELECT ROW_NUMBER () OVER (ORDER BY LIST_PRICE DESC) ORDEN, PROD.*
FROM PDELAGARZA.PRODUCTS PROD) ORDENAMIENTO
INNER JOIN
    (SELECT AVG(LIST_PRICE) PROMEDIO FROM PDELAGARZA.PRODUCTS) PROMEDIO
    ON 1 = 1
WHERE ORDEN = 1;

--6 Obtener los 10 productos menos vendidos y la cantidad de sus ventas (QTY y Valor de venta) en el año 2015.
SELECT * FROM(SELECT ROW_NUMBER () OVER (ORDER BY OP.QUANTITY ASC) ORDEN, OP.*,
ORD.ORDER_DATE, PROD.PRODUCT_NAME, PROD.LIST_PRICE
FROM PDELAGARZA.ORDERS ORD
INNER JOIN PDELAGARZA.ORDERS_PRODUCTS OP
    ON ORD.ORDER_ID = OP.ORDER_ID
INNER JOIN PDELAGARZA.PRODUCTS PROD
    ON OP.PRODUCT_ID = PROD.PRODUCT_ID) ORDENAMIENTO
WHERE ORDEN < 11 AND EXTRACT (YEAR FROM ORDER_DATE) = 2015;

--7 Obtener al cliente con mas compras en la historia.
SELECT ORD.CUSTOMER_ID, COUNT(ORD.CUSTOMER_ID) CUENTA, CUS.FIRST_NAME, CUS.LAST_NAME, CUS.COMPANY, CUS.EMAIL
FROM PDELAGARZA.ORDERS ORD
INNER JOIN PDELAGARZA.CUSTOMERS CUS
    ON ORD.CUSTOMER_ID = CUS.CUSTOMER_ID
GROUP BY ORD.CUSTOMER_ID, CUS.FIRST_NAME, CUS.LAST_NAME, CUS.COMPANY, CUS.EMAIL
HAVING COUNT(*) = (SELECT MAX(COUNT(*)) FROM PDELAGARZA.ORDERS GROUP BY CUSTOMER_ID);
--8 Calcular el envio de las ordenes tomando en cuenta el número de compras del año anterior: 
	---Si tiene menos de 2 compras usar el 15%
	---Si tiene entre 2 y 4 compras usar el 10%
	---Si tiene mas de 5 compras usar el 5%